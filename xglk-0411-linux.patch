diff -Naur xglk/xg_fileref.c fixed-glk/xg_fileref.c
--- xglk/xg_fileref.c	1999-08-29 21:37:42.000000000 +0100
+++ fixed-glk/xg_fileref.c	2003-03-18 21:15:19.000000000 +0000
@@ -123,13 +123,13 @@
 
 frefid_t glk_fileref_create_temp(glui32 usage, glui32 rock)
 {
-  char *filename;
+  char filename[32];
   fileref_t *fref;
     
   /* This is a pretty good way to do this on Unix systems. 
      I have no idea about the DOS/Windows world. */
         
-  filename = tmpnam(NULL);
+  (void) sprintf (filename, "XGlk%d%d", getpid(), getppid());
     
   fref = gli_new_fileref(filename, usage, rock);
   if (!fref) {
diff -Naur xglk/xglk_loop.c fixed-glk/xglk_loop.c
--- xglk/xglk_loop.c	1999-06-06 17:07:45.000000000 +0100
+++ fixed-glk/xglk_loop.c	2003-03-18 21:01:55.000000000 +0000
@@ -17,14 +17,13 @@
 void xglk_event_poll(event_t *ev, glui32 millisec)
 {
   struct timeval tv, curtime, outtime;
-  struct timezone tz;
   /* just check for a timer event, nothing else. */
   
   eventloop_event = ev;
 
   if (millisec) {
     if (lasttime.tv_sec == 0)
-      gettimeofday(&lasttime, &tz);
+      gettimeofday(&lasttime, NULL);
     outtime.tv_sec = lasttime.tv_sec + (millisec/1000);
     outtime.tv_usec = lasttime.tv_usec + ((millisec%1000)*1000);
     if (outtime.tv_usec >= 1000000) {
@@ -34,7 +33,7 @@
   }
 
   if (millisec) {
-    gettimeofday(&curtime, &tz);
+    gettimeofday(&curtime, NULL);
     if (curtime.tv_sec > outtime.tv_sec 
       || (curtime.tv_sec == outtime.tv_sec 
 	&& curtime.tv_usec > outtime.tv_usec)) {
@@ -61,14 +60,13 @@
   int eventp;
   int firsttime = TRUE;
   struct timeval tv, curtime, outtime;
-  struct timezone tz;
 
   eventloop_event = ev;
   xglk_perform_click(mouse_Reset, NULL, 0, 0);
 
   if (millisec) {
     if (lasttime.tv_sec == 0)
-      gettimeofday(&lasttime, &tz);
+      gettimeofday(&lasttime, NULL);
     outtime.tv_sec = lasttime.tv_sec + (millisec/1000);
     outtime.tv_usec = lasttime.tv_usec + ((millisec%1000)*1000);
     if (outtime.tv_usec >= 1000000) {
@@ -84,7 +82,7 @@
     }
 
     if (millisec && !firsttime) {
-      gettimeofday(&curtime, &tz);
+      gettimeofday(&curtime, NULL);
       if (curtime.tv_sec > outtime.tv_sec 
 	|| (curtime.tv_sec == outtime.tv_sec 
 	  && curtime.tv_usec > outtime.tv_usec)) {
diff -Naur xglk/xglk_msg.c fixed-glk/xglk_msg.c
--- xglk/xglk_msg.c	2000-04-13 02:31:54.000000000 +0100
+++ fixed-glk/xglk_msg.c	2003-03-18 21:02:36.000000000 +0000
@@ -25,8 +25,6 @@
 
 int init_xmsg()
 {
-  struct timezone tz;
-
   message_size = 80;
   message = (char *)malloc(message_size * sizeof(char));
   if (!message)
@@ -36,7 +34,7 @@
     LIBRARYNAME, LIBRARYVERSION);
   messagelen = strlen(message);
   messagesticky = FALSE;
-  gettimeofday(&messagetime, &tz);
+  gettimeofday(&messagetime, NULL);
   messagetime.tv_sec += TIMEOUT;
 
   return TRUE;
@@ -104,8 +102,6 @@
 
 void xmsg_set_message(char *str, int sticky)
 {
-  struct timezone tz;
-   
   if (!message)
     return;
   if (!str)
@@ -121,19 +117,18 @@
   xmsg_redraw();
 
   messagesticky = sticky;
-  gettimeofday(&messagetime, &tz);
+  gettimeofday(&messagetime, NULL);
   messagetime.tv_sec += TIMEOUT;
 }
 
 void xmsg_check_timeout()
 {
-  struct timezone tz;
   struct timeval tv;
 
   if (messagesticky)
     return;
 
-  gettimeofday(&tv, &tz);
+  gettimeofday(&tv, NULL);
   if (tv.tv_sec > messagetime.tv_sec
     || (tv.tv_sec == messagetime.tv_sec && tv.tv_usec > messagetime.tv_usec)) {
     xmsg_set_message(NULL, TRUE);
diff -Naur xglk/xglk_scrap.c fixed-glk/xglk_scrap.c
--- xglk/xglk_scrap.c	1999-06-06 17:07:45.000000000 +0100
+++ fixed-glk/xglk_scrap.c	2003-03-18 21:05:34.000000000 +0000
@@ -1,5 +1,6 @@
 #include "xglk.h"
 #include <stdlib.h>
+#include <string.h>
 #include <X11/Xatom.h>
 #include "xg_internal.h"
 
diff -Naur xglk/xg_style.c fixed-glk/xg_style.c
--- xglk/xg_style.c	2000-04-13 04:02:01.000000000 +0100
+++ fixed-glk/xg_style.c	2003-03-18 21:04:12.000000000 +0000
@@ -1,4 +1,5 @@
 #include <stdlib.h>
+#include <string.h>
 #include "xglk.h"
 #include "xg_internal.h"
 
